Use DfAllEnt.pkg

Use VirtualDimensions\cVirtualColumns.pkg

Object oVirtualColumnCollectionLinkSetupPanel is a ModalPanel
    Set Size to 248 322
    Set Label to "Collection columns"
    Set piMinSize to 89 211
    Set Locate_Mode to CENTER_ON_PANEL
    Set Border_Style to Border_Thick
    
    On_Key kCancel Send Close_Panel

    Property Boolean pbAccept
    Property Integer phVirtialColumnObject
    Property String  psCollectionID

    Object oCollectionName is a Form
        Set Size to 13 168
        Set Location to 15 94
        Set Label to "Collection name:"
        Set Label_Col_Offset to 0
        Set Label_Justification_Mode to JMode_Right
        Set Enabled_State to False
    End_Object

    Object oCollectionLabel is a Form
        Set Size to 13 168
        Set Location to 34 94
        Set Label to "Label:"
        Set Label_Col_Offset to 0
        Set Label_Justification_Mode to JMode_Right
        Set Enabled_State to False
    End_Object

    Object oLinksGrid is a cfreeCJGrid
        Set Size to 167 302
        Set Location to 52 10
        Set peAnchors to anAll
        Set pbAutoAppend to True
        Set pbAllowRowSwapUpDown to True
        
        Procedure AutoCloseEmptyRow
            Boolean bOk
            String sColumnID
            Get SelectedRowValue of oColumnColumn to sColumnID
            If (Trim(sColumnID)="") Begin
                Get DeleteSelectedRow to bOk
            End
        End_Procedure
        
        Function OnRowChanging Integer iCurrentSelectedRow Integer iNewRow Returns Boolean
            Send AutoCloseEmptyRow
            Function_Return False
        End_Function
        
        Object oColumnColumn is a cCJGridColumn
            Set piWidth to 162
            Set psCaption to "Column"
            Set pbComboButton to True
            Set pbComboEntryState to True
            Function OnValidating Returns Boolean
                String sValue
                Get SelectedRowValue to sValue
                If (sValue="") Begin
//                    Send Info_Box "Blank value not allowed" "Blank value not allowed"
                End
                Function_Return (sValue="")
            End_Function
            
            Procedure FillComboList
                Integer hVirtialColumnObject iMax iItem
                tvdMaster[] aMasters
                Get phVirtialColumnObject to hVirtialColumnObject
                Send ComboDeleteData
                Get Masters of hVirtialColumnObject "" 0 to aMasters
                Move (SizeOfArray(aMasters)-1) to iMax
                For iItem from 0 to iMax
                    Send ComboAddItem aMasters[iItem].sID iItem
                Loop
            End_Procedure
        End_Object
        
        Function LinksFromTable Returns tvdLink[]
            Integer hVirtialColumnObject 
            tvdLink[] aLinks
            Get phVirtialColumnObject to hVirtialColumnObject
            Get LinkCollection of hVirtialColumnObject (psCollectionID(Self)) to aLinks
            Function_Return aLinks
        End_Function

        Function DataSource tvdLink[] aLinks Returns tDataSourceRow[]
            Integer iItem iMax
            tDataSourceRow[] aDataSource
            
            
            Move (SizeOfArray(aLinks)-1) to iMax
            For iItem from 0 to iMax
                Move aLinks[iItem].sColumnID to aDataSource[iItem].sValue[0]
            Loop
            Function_Return aDataSource
        End_Function

        Procedure FillList
            tvdLink[] aLinks
            tDataSourceRow[] aDataSource
            Get LinksFromTable to aLinks
            Get DataSource aLinks to aDataSource
            Send InitializeData aDataSource
            Send FillComboList of oColumnColumn     
        End_Procedure
        
        Function CurrentListContent Returns tvdLink[]
            Integer iMax iItem
            Handle hoDataSource
            String sRowID
            tDataSourceRow[] aDataSource
            tvdLink[] aLinks

            Get phoDataSource to hoDataSource
            Get DataSource of hoDataSource to aDataSource
            
            Move (SizeOfArray(aDataSource)-1) to iMax
            For iItem from 0 to iMax
                Get psCollectionID to aLinks[iItem].sCollectionID
                Move aDataSource[iItem].sValue[0] to aLinks[iItem].sColumnID
                Move iItem to aLinks[iItem]._iSortOrder
            Loop

            Function_Return aLinks
        End_Function

    End_Object

    Procedure Close_Panel_Ok
        Set pbAccept to True
        Send Close_Panel
    End_Procedure
    
    Procedure ResetData
        Send Info_Box "Not implemented"
    End_Procedure

    Object oResetBtn is a Button
        Set Size to 14 68
        Set Label    to "Reset changes"
        Set Location to 226 127
        Set peAnchors to anBottomRight
        Procedure OnClick
            Send ResetData
        End_Procedure
    End_Object
    
    Object oOkBtn is a Button
        Set Label    to "OK"
        Set Location to 226 208
        Set peAnchors To anBottomRight
        Procedure OnClick
            Send Close_Panel_Ok
        End_Procedure
    End_Object

    Object oCancelBtn is a Button
        Set Label    to "Cancel"
        Set Location to 226 263
        Set peAnchors to anBottomRight
        Procedure OnClick
            Send Close_Panel
        End_Procedure
    End_Object
    
    Function PopupCollection String sCollectionID Integer hVirtialColumnObject Returns Boolean
        tvdCollection strCollection
        tvdLink[] aLinks 
        
        Set phVirtialColumnObject to hVirtialColumnObject
        Set psCollectionID to sCollectionID
        Set pbAccept to False

        Get CollectionFindByID of hVirtialColumnObject sCollectionID to strCollection
        If (strCollection.sID=sCollectionID) Begin

            Set Value of oCollectionName to strCollection.sID
            Set Value of oCollectionLabel to strCollection.sLabel
            
            Send DFPostMessage MSG_FillList oLinksGrid 
            Send Popup
            If (pbAccept(Self)) Begin
                Get CurrentListContent of oLinksGrid to aLinks
                If (LinksSave(hVirtialColumnObject,sCollectionID,aLinks)) Begin
                End
            End
        End
        Else Begin
            Error 413 ("Collection ID not found ("+sCollectionID+")")
        End
        Function_Return (pbAccept(Self))
    End_Function
End_Object
